 local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Camera = workspace.CurrentCamera

-- Configs
local Config = {
    AssistStrength = 0.15,
    MaxDistance = 500,
    LockPart = "Head",
    TeamCheck = true,
    FOVEnabled = true,
    FOVRadius = 150,
    FOVVisible = true,
    FOVColor = Color3.fromRGB(0, 255, 255),
    FOVThickness = 1
}
local Enabled = false
local ConfigFile = "hecker_aim_config.json"

-- Load saved configs
local function LoadConfig()
    if isfile and readfile then
        if isfile(ConfigFile) then
            local success, savedConfig = pcall(function()
                return HttpService:JSONDecode(readfile(ConfigFile))
            end)
            if success and savedConfig then
                Config.AssistStrength = savedConfig.AssistStrength or Config.AssistStrength
                Config.MaxDistance = savedConfig.MaxDistance or Config.MaxDistance
                Config.TeamCheck = savedConfig.TeamCheck or Config.TeamCheck
                Config.FOVEnabled = savedConfig.FOVEnabled or Config.FOVEnabled
                Config.FOVRadius = savedConfig.FOVRadius or Config.FOVRadius
                Config.FOVVisible = savedConfig.FOVVisible or Config.FOVVisible
                Config.FOVColor = savedConfig.FOVColor or Config.FOVColor
                Config.FOVThickness = savedConfig.FOVThickness or Config.FOVThickness
                Config.LockPart = savedConfig.LockPart or Config.LockPart
            end
        end
    end
end
LoadConfig()

-- Save config
local function SaveConfig()
    if writefile then
        local success, err = pcall(function()
            writefile(ConfigFile, HttpService:JSONEncode({
                AssistStrength = Config.AssistStrength,
                MaxDistance = Config.MaxDistance,
                TeamCheck = Config.TeamCheck,
                FOVEnabled = Config.FOVEnabled,
                FOVRadius = Config.FOVRadius,
                FOVVisible = Config.FOVVisible,
                FOVColor = Config.FOVColor,
                FOVThickness = Config.FOVThickness,
                LockPart = Config.LockPart
            }))
        end)
        if success then
            StarterGui:SetCore("SendNotification", {
                Title = "Hecker Aim",
                Text = "Config saved!",
                Duration = 2
            })
        else
            StarterGui:SetCore("SendNotification", {
                Title = "Hecker Aim",
                Text = "Save failed (executor?)",
                Duration = 2
            })
        end
    else
        StarterGui:SetCore("SendNotification", {
            Title = "Hecker Aim",
            Text = "No file support",
            Duration = 2
        })
    end
end

-- Slider creation function
local function CreateSlider(parent, name, min, max, default, updateFunc, posY)
    local SliderFrame = Instance.new("Frame")
    SliderFrame.Size = UDim2.new(0.8, 0, 0.1, 0)
    SliderFrame.Position = UDim2.new(0.1, 0, posY, 0)
    SliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 100)
    SliderFrame.Parent = parent
    local SliderCorner = Instance.new("UICorner")
    SliderCorner.CornerRadius = UDim.new(0, 4)
    SliderCorner.Parent = SliderFrame

    local SliderLabel = Instance.new("TextLabel")
    SliderLabel.Size = UDim2.new(1, 0, 0.3, 0)
    SliderLabel.BackgroundTransparency = 1
    SliderLabel.Text = name .. ": " .. string.format("%.2f", default)
    SliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    SliderLabel.Font = Enum.Font.Code
    SliderLabel.TextSize = 12
    SliderLabel.Parent = SliderFrame

    local SliderTrack = Instance.new("Frame")
    SliderTrack.Size = UDim2.new(0.9, 0, 0.2, 0)
    SliderTrack.Position = UDim2.new(0.05, 0, 0.6, 0)
    SliderTrack.BackgroundColor3 = Color3.fromRGB(30, 30, 60)
    SliderTrack.Parent = SliderFrame
    local TrackCorner = Instance.new("UICorner")
    TrackCorner.CornerRadius = UDim.new(0, 4)
    TrackCorner.Parent = SliderTrack

    local SliderKnob = Instance.new("TextButton")
    SliderKnob.Size = UDim2.new(0.1, 0, 1, 0)
    SliderKnob.Position = UDim2.new((default - min) / (max - min), 0, 0, 0)
    SliderKnob.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
    SliderKnob.Text = ""
    SliderKnob.Parent = SliderTrack
    local KnobCorner = Instance.new("UICorner")
    KnobCorner.CornerRadius = UDim.new(0, 4)
    KnobCorner.Parent = SliderKnob

    local dragging = false
    SliderKnob.MouseButton1Down:Connect(function()
        dragging = true
    end)
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mouseX = input.Position.X
            local trackAbsPos = SliderTrack.AbsolutePosition
            local trackAbsSize = SliderTrack.AbsoluteSize
            local relativeX = math.clamp((mouseX - trackAbsPos.X) / trackAbsSize.X, 0, 1)
            local value = min + (max - min) * relativeX
            SliderKnob.Position = UDim2.new(relativeX, 0, 0, 0)
            SliderLabel.Text = name .. ": " .. string.format("%.2f", value)
            updateFunc(value)
        end
    end)

    return SliderFrame
end

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.Name = "HeckerAimGUI"

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 300, 0, 250)
Frame.Position = UDim2.new(0.5, -150, 0.5, -125)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 60)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true
Frame.Parent = ScreenGui
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 8)
UICorner.Parent = Frame

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0.15, 0)
Title.BackgroundTransparency = 1
Title.Text = "Hecker Aim Assist"
Title.TextColor3 = Color3.fromRGB(0, 255, 255)
Title.Font = Enum.Font.Code
Title.TextSize = 20
Title.Parent = Frame

-- Tab system
local TabFrame = Instance.new("Frame")
TabFrame.Size = UDim2.new(1, 0, 0.1, 0)
TabFrame.Position = UDim2.new(0, 0, 0.15, 0)
TabFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 80)
TabFrame.Parent = Frame
local TabCorner = Instance.new("UICorner")
TabCorner.CornerRadius = UDim.new(0, 4)
TabCorner.Parent = TabFrame

local MainTabButton = Instance.new("TextButton")
MainTabButton.Size = UDim2.new(1/3, 0, 1, 0)
MainTabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 100)
MainTabButton.Text = "Main"
MainTabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MainTabButton.Font = Enum.Font.Code
MainTabButton.TextSize = 14
MainTabButton.Parent = TabFrame
local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 4)
MainCorner.Parent = MainTabButton

local ConfigTabButton = Instance.new("TextButton")
ConfigTabButton.Size = UDim2.new(1/3, 0, 1, 0)
ConfigTabButton.Position = UDim2.new(1/3, 0, 0, 0)
ConfigTabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 100)
ConfigTabButton.Text = "Config"
ConfigTabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ConfigTabButton.Font = Enum.Font.Code
ConfigTabButton.TextSize = 14
ConfigTabButton.Parent = TabFrame
local ConfigCorner = Instance.new("UICorner")
ConfigCorner.CornerRadius = UDim.new(0, 4)
ConfigCorner.Parent = ConfigTabButton

local VisualsTabButton = Instance.new("TextButton")
VisualsTabButton.Size = UDim2.new(1/3, 0, 1, 0)
VisualsTabButton.Position = UDim2.new(2/3, 0, 0, 0)
VisualsTabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 100)
VisualsTabButton.Text = "Visuals"
VisualsTabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
VisualsTabButton.Font = Enum.Font.Code
VisualsTabButton.TextSize = 14
VisualsTabButton.Parent = TabFrame
local VisualsCorner = Instance.new("UICorner")
VisualsCorner.CornerRadius = UDim.new(0, 4)
VisualsCorner.Parent = VisualsTabButton

-- Main tab
local MainTab = Instance.new("Frame")
MainTab.Size = UDim2.new(1, 0, 0.75, 0)
MainTab.Position = UDim2.new(0, 0, 0.25, 0)
MainTab.BackgroundTransparency = 1
MainTab.Parent = Frame

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0.8, 0, 0.15, 0)
ToggleButton.Position = UDim2.new(0.1, 0, 0.1, 0)
ToggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 100)
ToggleButton.Text = "Toggle: OFF"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Font = Enum.Font.Code
ToggleButton.TextSize = 14
ToggleButton.Parent = MainTab
local ToggleCorner = Instance.new("UICorner")
ToggleCorner.Parent = ToggleButton

local TeamCheckToggle = Instance.new("TextButton")
TeamCheckToggle.Size = UDim2.new(0.8, 0, 0.15, 0)
TeamCheckToggle.Position = UDim2.new(0.1, 0, 0.3, 0)
TeamCheckToggle.BackgroundColor3 = Config.TeamCheck and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(50, 50, 100)
TeamCheckToggle.Text = "Team Check: " .. (Config.TeamCheck and "ON" or "OFF")
TeamCheckToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
TeamCheckToggle.Font = Enum.Font.Code
TeamCheckToggle.TextSize = 14
TeamCheckToggle.Parent = MainTab
local TeamCorner = Instance.new("UICorner")
TeamCorner.Parent = TeamCheckToggle

local FOVEnabledToggle = Instance.new("TextButton")
FOVEnabledToggle.Size = UDim2.new(0.8, 0, 0.15, 0)
FOVEnabledToggle.Position = UDim2.new(0.1, 0, 0.5, 0)
FOVEnabledToggle.BackgroundColor3 = Config.FOVEnabled and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(50, 50, 100)
FOVEnabledToggle.Text = "FOV Check: " .. (Config.FOVEnabled and "ON" or "OFF")
FOVEnabledToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
FOVEnabledToggle.Font = Enum.Font.Code
FOVEnabledToggle.TextSize = 14
FOVEnabledToggle.Parent = MainTab
local FOVEnCorner = Instance.new("UICorner")
FOVEnCorner.Parent = FOVEnabledToggle

-- Config tab
local ConfigTab = Instance.new("Frame")
ConfigTab.Size = UDim2.new(1, 0, 0.75, 0)
ConfigTab.Position = UDim2.new(0, 0, 0.25, 0)
ConfigTab.BackgroundTransparency = 1
ConfigTab.Visible = false
ConfigTab.Parent = Frame

local StrengthSlider = CreateSlider(ConfigTab, "Assist Strength", 0, 1, Config.AssistStrength, function(v)
    Config.AssistStrength = v
end, 0.05)

local DistanceSlider = CreateSlider(ConfigTab, "Max Distance", 50, 1000, Config.MaxDistance, function(v)
    Config.MaxDistance = v
end, 0.25)

local LockPartLabel = Instance.new("TextLabel")
LockPartLabel.Size = UDim2.new(0.8, 0, 0.1, 0)
LockPartLabel.Position = UDim2.new(0.1, 0, 0.45, 0)
LockPartLabel.BackgroundTransparency = 1
LockPartLabel.Text = "Lock Part: " .. Config.LockPart
LockPartLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
LockPartLabel.Font = Enum.Font.Code
LockPartLabel.TextSize = 12
LockPartLabel.Parent = ConfigTab

local LockPartBox = Instance.new("TextBox")
LockPartBox.Size = UDim2.new(0.8, 0, 0.1, 0)
LockPartBox.Position = UDim2.new(0.1, 0, 0.55, 0)
LockPartBox.BackgroundColor3 = Color3.fromRGB(50, 50, 100)
LockPartBox.Text = Config.LockPart
LockPartBox.TextColor3 = Color3.fromRGB(255, 255, 255)
LockPartBox.Font = Enum.Font.Code
LockPartBox.TextSize = 12
LockPartBox.Parent = ConfigTab
local LockCorner = Instance.new("UICorner")
LockCorner.Parent = LockPartBox

local SaveButton = Instance.new("TextButton")
SaveButton.Size = UDim2.new(0.8, 0, 0.1, 0)
SaveButton.Position = UDim2.new(0.1, 0, 0.7, 0)
SaveButton.BackgroundColor3 = Color3.fromRGB(50, 50, 100)
SaveButton.Text = "Save Config"
SaveButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SaveButton.Font = Enum.Font.Code
SaveButton.TextSize = 12
SaveButton.Parent = ConfigTab
local SaveCorner = Instance.new("UICorner")
SaveCorner.Parent = SaveButton

-- Visuals tab
local VisualsTab = Instance.new("Frame")
VisualsTab.Size = UDim2.new(1, 0, 0.75, 0)
VisualsTab.Position = UDim2.new(0, 0, 0.25, 0)
VisualsTab.BackgroundTransparency = 1
VisualsTab.Visible = false
VisualsTab.Parent = Frame

local FOVVisibleToggle = Instance.new("TextButton")
FOVVisibleToggle.Size = UDim2.new(0.8, 0, 0.15, 0)
FOVVisibleToggle.Position = UDim2.new(0.1, 0, 0.05, 0)
FOVVisibleToggle.BackgroundColor3 = Config.FOVVisible and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(50, 50, 100)
FOVVisibleToggle.Text = "FOV Visible: " .. (Config.FOVVisible and "ON" or "OFF")
FOVVisibleToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
FOVVisibleToggle.Font = Enum.Font.Code
FOVVisibleToggle.TextSize = 14
FOVVisibleToggle.Parent = VisualsTab
local FOVVisCorner = Instance.new("UICorner")
FOVVisCorner.Parent = FOVVisibleToggle

local FOVRadiusSlider = CreateSlider(VisualsTab, "FOV Radius", 50, 500, Config.FOVRadius, function(v)
    Config.FOVRadius = v
end, 0.25)

local FOVThicknessSlider = CreateSlider(VisualsTab, "FOV Thickness", 1, 10, Config.FOVThickness, function(v)
    Config.FOVThickness = v
end, 0.45)

-- Tab switching
local function SwitchTab(tab)
    MainTab.Visible = tab == "Main"
    ConfigTab.Visible = tab == "Config"
    VisualsTab.Visible = tab == "Visuals"
    MainTabButton.BackgroundColor3 = tab == "Main" and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(50, 50, 100)
    ConfigTabButton.BackgroundColor3 = tab == "Config" and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(50, 50, 100)
    VisualsTabButton.BackgroundColor3 = tab == "Visuals" and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(50, 50, 100)
end

MainTabButton.MouseButton1Click:Connect(function() SwitchTab("Main") end)
ConfigTabButton.MouseButton1Click:Connect(function() SwitchTab("Config") end)
VisualsTabButton.MouseButton1Click:Connect(function() SwitchTab("Visuals") end)

SwitchTab("Main")

-- Toggle functions
ToggleButton.MouseButton1Click:Connect(function()
    Enabled = not Enabled
    ToggleButton.Text = "Toggle: " .. (Enabled and "ON" or "OFF")
    ToggleButton.BackgroundColor3 = Enabled and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(50, 50, 100)
    StarterGui:SetCore("SendNotification", {
        Title = "Hecker Aim",
        Text = "Assist " .. (Enabled and "Enabled" or "Disabled"),
        Duration = 3
    })
end)

TeamCheckToggle.MouseButton1Click:Connect(function()
    Config.TeamCheck = not Config.TeamCheck
    TeamCheckToggle.Text = "Team Check: " .. (Config.TeamCheck and "ON" or "OFF")
    TeamCheckToggle.BackgroundColor3 = Config.TeamCheck and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(50, 50, 100)
    SaveConfig()
end)

FOVEnabledToggle.MouseButton1Click:Connect(function()
    Config.FOVEnabled = not Config.FOVEnabled
    FOVEnabledToggle.Text = "FOV Check: " .. (Config.FOVEnabled and "ON" or "OFF")
    FOVEnabledToggle.BackgroundColor3 = Config.FOVEnabled and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(50, 50, 100)
    SaveConfig()
end)

FOVVisibleToggle.MouseButton1Click:Connect(function()
    Config.FOVVisible = not Config.FOVVisible
    FOVVisibleToggle.Text = "FOV Visible: " .. (Config.FOVVisible and "ON" or "OFF")
    FOVVisibleToggle.BackgroundColor3 = Config.FOVVisible and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(50, 50, 100)
    SaveConfig()
end)

-- Lock part input
LockPartBox.FocusLost:Connect(function()
    local value = LockPartBox.Text
    if value and #value > 0 then
        Config.LockPart = value
        LockPartLabel.Text = "Lock Part: " .. value
    else
        LockPartBox.Text = Config.LockPart
    end
end)

SaveButton.MouseButton1Click:Connect(SaveConfig)

-- FOV Circle
local fovCircle = Drawing.new("Circle")
fovCircle.Visible = false
fovCircle.Radius = Config.FOVRadius
fovCircle.Color = Config.FOVColor
fovCircle.Thickness = Config.FOVThickness
fovCircle.Transparency = 1
fovCircle.Filled = false

-- IsValidTarget function
local function IsValidTarget(player, targetModel)
    if not Config.TeamCheck then return true end
    if not Players:GetPlayerFromCharacter(targetModel) then return true end
    local targetPlayer = Players:GetPlayerFromCharacter(targetModel)
    if not targetPlayer then return false end
    if not LocalPlayer.Team and not targetPlayer.Team then return false end
    if LocalPlayer.Team and targetPlayer.Team then
        if LocalPlayer.Team == targetPlayer.Team then return false end
        if LocalPlayer.TeamColor and targetPlayer.TeamColor then
            return LocalPlayer.TeamColor ~= targetPlayer.TeamColor
        end
        return true
    end
    return LocalPlayer.Team ~= targetPlayer.Team
end

-- GetClosestHumanoid with FOV
local function GetClosestHumanoid()
    local closest = nil
    local minScreenDist = Config.FOVEnabled and Config.FOVRadius or math.huge
    local center = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

    for _, model in ipairs(workspace:GetChildren()) do
        if model:IsA("Model") and model ~= LocalPlayer.Character then
            local humanoid = model:FindFirstChild("Humanoid")
            local root = model:FindFirstChild("HumanoidRootPart")
            local part = model:FindFirstChild(Config.LockPart)
            if humanoid and root and part and humanoid.Health > 0 then
                if IsValidTarget(LocalPlayer, model) then
                    local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
                    if onScreen then
                        local dist3D = (part.Position - Camera.CFrame.Position).Magnitude
                        if dist3D < Config.MaxDistance then
                            local screenDist = (Vector2.new(screenPos.X, screenPos.Y) - center).Magnitude
                            if screenDist < minScreenDist then
                                minScreenDist = screenDist
                                closest = model
                            end
                        end
                    end
                end
            end
        end
    end
    return closest
end

-- Aim lock
local lockedTarget = nil
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        if Enabled then
            lockedTarget = GetClosestHumanoid()
            if lockedTarget then
                StarterGui:SetCore("SendNotification", {
                    Title = "Hecker Aim",
                    Text = "Locked on: " .. lockedTarget.Name,
                    Duration = 2
                })
            end
        end
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        lockedTarget = nil
    end
end)

-- Camera and FOV update
RunService.RenderStepped:Connect(function()
    local center = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
    fovCircle.Position = center
    fovCircle.Radius = Config.FOVRadius
    fovCircle.Color = Config.FOVColor
    fovCircle.Thickness = Config.FOVThickness
    fovCircle.Visible = Enabled and Config.FOVVisible

    if Enabled and lockedTarget and lockedTarget:FindFirstChild(Config.LockPart) then
        local targetPos = lockedTarget[Config.LockPart].Position
        local currentCFrame = Camera.CFrame
        local targetCFrame = CFrame.new(currentCFrame.Position, targetPos)
        Camera.CFrame = currentCFrame:Lerp(targetCFrame, Config.AssistStrength)
    end
end)

-- Cleanup
LocalPlayer.CharacterAdded:Connect(function()
    lockedTarget = nil
end)
